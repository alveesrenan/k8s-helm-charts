# fullnameOverride: 

image:
  repository: renaalve/kubernetes-hpa-custom
  tag: 1.0.0
  pullPolicy: IfNotPresent
  pullsecret: hub.docker.com

## Service k8s resource
## Ref: https://kubernetes.io/docs/concepts/services-networking/service/
##
service:  
  type: ClusterIP
  ports:
    - name: http
      port: 8080
      targetPort: 8080
      protocol: TCP
    - name: jvm-monitoring
      port: 9010
      targetPort: 9010
      protocol: TCP

## Deployment k8s resource
## Ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/
##
deployment:
  name: standard-application
  ports:
    - name: http
      containerPort: 8080
    - name: jvm-monitoring
      containerPort: 9010

  replicaCount: 1

  ## Additional server container environment variables
  ## Ref: https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/
  ##
  env:
    SPRING_PROFILE: dev
  
  ## Additional server container environment variables as secrets
  ## Ref: https://kubernetes.io/docs/tasks/inject-data-application/distribute-credentials-secure/#define-container-environment-variables-using-secret-data
  ## 
  envFromSecret:
    - name: SECRET_KEY
      keys:
        DEPLOYMENT_ENV_NAME: SECRET_VALUE # env name: secret key
    
  ## Additional server container environment variables as configmaps
  ## Ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-pod-configmap/
  ## 
  envFromConfigMap:
    - name: CONFIG_MAP_KEY
      keys:
        RABBITMQ_HOST: rabbitmq.host # env name: config map key
        RABBITMQ_PORT: rabbitmq.port 

  ## Additional server container environment variables
  ## Ref: https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/
  ##
  resources:
    requests:
      memory: 384Mi
    limits:
      memory: 512Mi

  ## liveness and readiness probe setup
  ## Ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
  ##
  livenessProbe:
    initialDelaySeconds: 45
    periodSeconds: 15
    failureThreshold: 3
    path: /actuator/health
    port: 8080
  
  readinessProbe:
    initialDelaySeconds: 30
    periodSeconds: 15
    failureThreshold: 3
    path: /actuator/health
    port: 8080
  
  ## node selector setup
  ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
  ##
  nodeSelector: {}
    # node-type: worker

  ## node affinity setup
  ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#node-affinity
  ##
  affinity: {}
    # nodeAffinity:
    #   requiredDuringSchedulingIgnoredDuringExecution:
    #     nodeSelectorTerms:
    #     - matchExpressions:
    #       - key: kubernetes.io/hostname
    #         operator: In
    #         values:
    #         - ec2-123-45-6-78.compute-1.amazonaws.com

## Additional server container for volume mounts
## Ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-volume-storage/
## 
persistence:
  enabled: true
  storageClass: storage-class-name
  volumeMounts:
    logs:
      mount:
        path: /standard-application/logs
        
## Ingress k8s resource
## Ref: https://kubernetes.io/docs/concepts/services-networking/ingress/
##
ingress:
  enabled: false
  annotations:
    kubernetes.io/ingress.class: nginx
    kubernetes.io/ingress.allow-http: "true"
    nginx.ingress.kubernetes.io/add-base-url: "true"
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
  hostName: standard-application.com
  path: /

## Horizontal Pod Autoscaler k8s resource
## Ref: https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/
##
hpa:
  enabled: false
  annotations: {}
  minReplicas: 1
  maxReplicas: 4
  metrics:
    targetCpuAverageUtilization: 50
    targetMemoryAverageUtilization: 80

## Secrets k8s resource
## Ref: https://kubernetes.io/docs/concepts/configuration/secret/
##
secret:
  enabled: true
  secrets:
    - name: SECRET_NAME
      data:
        SECRET_KEY: U0VDUkVUX1ZBTFVFCg==